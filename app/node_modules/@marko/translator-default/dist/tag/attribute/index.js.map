{"version":3,"sources":["../../../src/tag/attribute/index.js"],"names":["EMPTY_ARRAY","EVENT_REG","attachedDetachedLoaded","WeakSet","enter","attr","hub","file","tag","parentPath","value","get","name","arguments","args","node","isVDOM","markoOpts","output","execModifiersAndDirectives","eventType","isDash","eventName","exec","length","buildCodeFrameError","isBooleanLiteral","toLowerCase","charAt","slice","handlers","once","has","add","remove","exit","tagDef","html","getAttribute","type","modifier","modifierTranslate","modifiers","tagNode","attrNode","undefined","directiveTranslate","directives"],"mappings":"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","sourcesContent":["import { isNativeTag, getTagDef, importDefault } from \"@marko/babel-utils\";\nimport directives from \"./directives\";\nimport modifiers from \"./modifiers\";\n\nconst EMPTY_ARRAY = [];\nconst EVENT_REG = /^(on(?:ce)?)(-)?(.*)$/;\nconst attachedDetachedLoaded = new WeakSet();\n\nexport default {\n  enter(attr) {\n    const {\n      hub: { file }\n    } = attr;\n    const tag = attr.parentPath;\n    const value = attr.get(\"value\");\n    const { name, arguments: args } = attr.node;\n    const isVDOM = file.markoOpts.output !== \"html\";\n\n    if (execModifiersAndDirectives(\"enter\", tag, attr, value)) {\n      return;\n    }\n\n    // Event handlers.\n    let [, eventType, isDash, eventName] = EVENT_REG.exec(name) || EMPTY_ARRAY;\n\n    if (eventType && args) {\n      if (!args.length) {\n        throw attr.buildCodeFrameError(\"Event handler is missing arguments.\");\n      }\n\n      if (!value.isBooleanLiteral(true)) {\n        throw value.buildCodeFrameError(\n          `\"${name}(handler, ...args)\" does not accept a value.`\n        );\n      }\n\n      if (!isDash) {\n        // When the event is not in dash case we normalized differently for html tags and custom tags.\n\n        if (isNativeTag(tag)) {\n          // Lowercase the string\n          // Example: onMouseOver → mouseover\n          eventName = eventName.toLowerCase();\n        } else {\n          // Convert first character to lower case:\n          // Example: onBeforeShow → beforeShow\n          eventName = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n        }\n      }\n\n      const handlers = (tag.node.handlers = tag.node.handlers || {});\n      if (handlers[eventName]) {\n        throw attr.buildCodeFrameError(\n          \"Duplicate event handlers are not supported.\"\n        );\n      }\n\n      handlers[eventName] = {\n        arguments: args,\n        once: eventType === \"once\"\n      };\n\n      if (isVDOM) {\n        if (eventName === \"attach\" || eventName === \"detach\") {\n          if (!attachedDetachedLoaded.has(file)) {\n            // Pull in helper for element attach/detach;\n            attachedDetachedLoaded.add(file);\n            importDefault(file, \"marko/src/runtime/components/attach-detach\");\n          }\n        }\n      }\n\n      attr.remove();\n      return;\n    }\n  },\n  exit(attr) {\n    const tag = attr.parentPath;\n    const { name, arguments: args } = attr.node;\n    const value = attr.get(\"value\");\n\n    if (execModifiersAndDirectives(\"exit\", tag, attr, value)) {\n      return;\n    }\n\n    const tagDef = getTagDef(tag);\n\n    if (tagDef) {\n      if (!tagDef.html && !tagDef.getAttribute(name)) {\n        throw attr.buildCodeFrameError(\n          `<${\n            tag.get(\"name.value\").node\n          }> does not support the \"${name}\" attribute.`\n        );\n      }\n    }\n\n    if (args && args.length) {\n      throw attr.buildCodeFrameError(\n        `Unsupported arguments on the \"${name}\" attribute.`\n      );\n    }\n  }\n};\n\nfunction execModifiersAndDirectives(type, tag, attr, value) {\n  const { node } = attr;\n  const { name, modifier } = node;\n\n  if (modifier) {\n    const modifierTranslate = modifiers[modifier];\n    if (modifierTranslate) {\n      if (modifierTranslate[type]) {\n        const tagNode = tag.node;\n        const attrNode = attr.node;\n        modifierTranslate[type](tag, attr, value);\n        if (tag.node !== tagNode || attr.node !== attrNode) return true;\n      }\n    } else if (name === \"xlink\" && modifier === \"href\" && isNativeTag(tag)) {\n      node.name += `:${modifier}`;\n      node.modifier = undefined;\n    } else {\n      throw attr.buildCodeFrameError(`Unsupported modifier \"${modifier}\".`);\n    }\n  }\n\n  const directiveTranslate = directives[name];\n  if (directiveTranslate) {\n    if (directiveTranslate[type]) {\n      const tagNode = tag.node;\n      const attrNode = attr.node;\n      directiveTranslate[type](tag, attr, value);\n      if (tag.node !== tagNode || attr.node !== attrNode) return true;\n    }\n  }\n}\n"],"file":"index.js"}