{"version":3,"sources":["../../src/util/add-dependencies.js"],"names":["entryFile","isHydrate","modules","resolveVirtualDependency","hydrateIncludeImports","markoOpts","program","path","shouldIncludeImport","toTestFn","addBrowserDeps","registerId","t","identifier","watchFiles","Set","hasComponents","splitComponentIndex","set","skip","addHydrateDeps","metadata","marko","Array","from","initId","markoComponentsImport","importPath","specifiers","push","importSpecifier","unshiftContainer","pushContainer","expressionStatement","callExpression","runtimeId","stringLiteral","file","meta","component","basename","opts","sourceFileName","add","watchFile","imported","imports","tag","tags","endsWith","splitComponentId","splitComponentImport","importDefaultSpecifier","id","sourceMaps","s","dep","deps","virtualPath","code","map","startPos","undefined","MagicString","source","snip","endPos","generateMap","includeContent","style","toUrl","startsWith","req","resolved","join","importDeclaration","val","test","bind"],"mappings":"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","sourcesContent":["import path from \"path\";\nimport MagicString from \"magic-string\";\nimport { types as t } from \"@marko/compiler\";\nimport { loadFileForImport, resolveRelativePath } from \"@marko/babel-utils\";\nexport default (entryFile, isHydrate) => {\n  const {\n    modules,\n    resolveVirtualDependency,\n    hydrateIncludeImports\n  } = entryFile.markoOpts;\n  const program = entryFile.path;\n  const shouldIncludeImport = toTestFn(hydrateIncludeImports);\n\n  if (!isHydrate) {\n    addBrowserDeps(entryFile);\n    return;\n  }\n\n  const registerId = t.identifier(\"register\");\n  const watchFiles = new Set();\n  let hasComponents = false;\n  let splitComponentIndex = 0;\n  program.set(\"body\", []);\n  program.skip();\n\n  addHydrateDeps(entryFile);\n  entryFile.metadata.marko.watchFiles = Array.from(watchFiles);\n\n  if (hasComponents) {\n    const initId = t.identifier(\"init\");\n    const markoComponentsImport = importPath(\n      entryFile,\n      \"marko/src/runtime/components\"\n    );\n    if (splitComponentIndex) {\n      markoComponentsImport.specifiers.push(\n        t.importSpecifier(registerId, registerId)\n      );\n    }\n    markoComponentsImport.specifiers.push(t.importSpecifier(initId, initId));\n    program.unshiftContainer(\"body\", markoComponentsImport);\n    program.pushContainer(\n      \"body\",\n      t.expressionStatement(\n        t.callExpression(\n          initId,\n          entryFile.markoOpts.runtimeId\n            ? [t.stringLiteral(entryFile.markoOpts.runtimeId)]\n            : []\n        )\n      )\n    );\n  }\n\n  function addHydrateDeps(file) {\n    const meta = file.metadata.marko;\n\n    if (meta.component) {\n      hasComponents = true;\n\n      if (\n        path.basename(meta.component) ===\n        path.basename(file.opts.sourceFileName)\n      ) {\n        // Stateful component.\n        program.pushContainer(\"body\", importPath(file, meta.component));\n        return;\n      }\n    }\n\n    watchFiles.add(file.opts.sourceFileName);\n\n    for (const watchFile of meta.watchFiles) {\n      watchFiles.add(watchFile);\n    }\n\n    addBrowserDeps(file);\n\n    for (const imported of meta.imports) {\n      if (shouldIncludeImport(imported)) {\n        program.pushContainer(\"body\", importPath(file, imported));\n      }\n    }\n\n    for (const tag of meta.tags) {\n      if (tag.endsWith(\".marko\")) {\n        addHydrateDeps(loadFileForImport(file, tag));\n      }\n    }\n\n    if (meta.component) {\n      // Split component\n      const splitComponentId = t.identifier(\n        `component_${splitComponentIndex++}`\n      );\n      const splitComponentImport = importPath(file, meta.component);\n      splitComponentImport.specifiers.push(\n        t.importDefaultSpecifier(splitComponentId)\n      );\n      program.pushContainer(\"body\", splitComponentImport);\n      program.pushContainer(\n        \"body\",\n        t.expressionStatement(\n          t.callExpression(registerId, [\n            t.stringLiteral(meta.id),\n            splitComponentId\n          ])\n        )\n      );\n    }\n  }\n\n  function addBrowserDeps(file) {\n    const { sourceFileName, sourceMaps } = file.opts;\n    let s;\n\n    for (let dep of file.metadata.marko.deps) {\n      if (typeof dep !== \"string\") {\n        const { virtualPath } = dep;\n        let { code } = dep;\n        let map;\n\n        if (sourceMaps && dep.startPos !== undefined) {\n          s = s || new MagicString(file.code, { source: sourceFileName });\n          map = s.snip(dep.startPos, dep.endPos).generateMap({\n            source: sourceFileName,\n            includeContent: true\n          });\n\n          if (sourceMaps === \"inline\" || sourceMaps === \"both\") {\n            code += dep.style\n              ? `\\n/*# sourceMappingURL=${map.toUrl()}*/`\n              : `\\n//# sourceMappingURL=${map.toUrl()}`;\n\n            if (sourceMaps === \"inline\") {\n              map = undefined;\n            }\n          }\n        }\n\n        dep = resolveVirtualDependency(sourceFileName, {\n          map,\n          code,\n          virtualPath\n        });\n      } else if (dep.startsWith(\"package:\")) {\n        continue;\n      }\n\n      program.pushContainer(\"body\", importPath(file, dep));\n    }\n  }\n\n  function importPath(file, req) {\n    const resolved =\n      file === entryFile\n        ? resolveRelativePath(file, req)\n        : resolveRelativePath(\n            entryFile,\n            path.join(file.opts.sourceFileName, \"..\", req)\n          );\n\n    if (modules === \"cjs\") {\n      return t.expressionStatement(\n        t.callExpression(t.identifier(\"require\"), [t.stringLiteral(resolved)])\n      );\n    }\n\n    return t.importDeclaration([], t.stringLiteral(resolved));\n  }\n};\n\nfunction toTestFn(val) {\n  if (typeof val === \"function\") {\n    return val;\n  }\n\n  return val.test.bind(val);\n}\n"],"file":"add-dependencies.js"}